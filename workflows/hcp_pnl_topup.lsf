#!/usr/bin/bash

# Copy this script to your project directory and edit as needed

# Useful wiki for executing this script in PNL GPU machines
# https://github.com/pnlbwh/luigi-pnlpipe/wiki/Run-HCP-pipeline-on-PNL-GPU-machines

: << COMMENT
HCP toolbox accepts an even number (2 or 4) of opposing templates.
You can write four templates in the following order:

    PA template PA template
    AP template AP template

Or two templates in the following order:

    PA template AP template

COMMENT

bids_data_dir=/data/pnl/U01_HCP_Psychosis/data_processing/BIDS/rawdata

raw_template="sub-*/ses-*/dwi/*_acq-PA_dir-99_dwi.nii.gz sub-*/ses-*/dwi/*_acq-PA_dir-107_dwi.nii.gz \
              sub-*/ses-*/dwi/*_acq-AP_dir-99_dwi.nii.gz sub-*/ses-*/dwi/*_acq-AP_dir-107_dwi.nii.gz"

# a single case id or a text file with list of cases
caselist=1004
# a single session id
s=01

LUIGI_CONFIG_PATH=/data/pnl/soft/pnlpipe3/luigi-pnlpipe/params/hcp/dwi_pipe_params.cfg
CUDA_VERSION=10.2

# task is one of {HcpPipe,Ukf,Wma800}
task=HcpPipe



# You should not edit anything beyond this line
# ==============================================================================



HcpOutDir=hcppipe

export HCPPIPEDIR=/software/rocky9/HCPpipelines
export HCPPIPEDIR_Config=/software/rocky9/HCPpipelines/global/config
export HCPPIPEDIR_Global=/software/rocky9/HCPpipelines/global/scripts

export LUIGI_CONFIG_PATH

cluster=`hostname | grep pnl-.*.partners.org`
if [ -z $cluster ]
then
    source /data/pnl/soft/pnlpipe3/bashrc3-gpu
else
    source /software/rocky9/bashrc9
fi

# check LSB_JOBINDEX because it won't exist in /rfanfs/
if [ ! -z ${LSB_JOBINDEX} ]
then
    export CUDA_VISIBLE_DEVICES=$(( ${LSB_JOBINDEX}%2 ))
fi

if [ -f ${caselist} ]
then
    # LSF script, list of subjects
    id=`head -${LSB_JOBINDEX} ${caselist} | tail -1`
else
    # shell script, one subject
    id=${caselist}
fi

# luigi-pnlpipe upto GibbsUn so data can be organized according to BIDS
for j in $(echo $raw_template)
do
    /software/rocky9/luigi-pnlpipe/workflows/ExecuteTask.py \
    --bids-data-dir $bids_data_dir \
    --task GibbsUn -c $id -s $s \
    --dwi-template $j
done


# determine --path for HCP pipe
template=($raw_template)
_subdir=`echo ${template[0]} | sed "s+sub-\*+sub-$id+g"`
subdir=`echo ${_subdir} | sed "s+ses-\*+ses-$s+g"`
datadir=`dirname $bids_data_dir`/derivatives/$USER-pnlpipe/`dirname $subdir`
echo "HCP pipe data directory: $datadir"


template=()
for t in $(echo $raw_template)
do
    base=`basename $t`
    template+=(${base//_dwi/_desc-XcUn_dwi})
done


# HCP pipe using GibbsUn data
if [ ! -f $datadir/$HcpOutDir/Diffusion/eddy/eddy_unwarped_images.nii.gz ]
then
    echo """
    Echo spacing for HCP data is 0.689998 milliseconds.
    It is obtained from the key EffectiveEchoSpacing (seconds) in BIDS sidecar yielded by dcm2niix.
    Command being issued to HCP pipeline:
    """
    

    if [ ${#template[@]} == 4 ]
    then
        cmd="$HCPPIPEDIR/DiffusionPreprocessing/DiffPreprocPipeline.sh --path=$datadir \
        --subject=$HcpOutDir --cuda-version=$CUDA_VERSION \
        --posData=`ls $datadir/${template[0]}`@`ls $datadir/${template[1]}` \
        --negData=`ls $datadir/${template[2]}`@`ls $datadir/${template[3]}` \
        --echospacing=0.689998 --PEdir=2 --gdcoeffs=NONE \
        --extra-eddy-arg=--data_is_shelled --extra-eddy-arg=--repol --extra-eddy-arg=--verbose"
     elif [ ${#template[@]} == 2 ]
     then
        cmd="$HCPPIPEDIR/DiffusionPreprocessing/DiffPreprocPipeline.sh --path=$datadir \
        --subject=$HcpOutDir --cuda-version=$CUDA_VERSION \
        --posData=`ls $datadir/${template[0]}` \
        --negData=`ls $datadir/${template[1]}` \
        --echospacing=0.689998 --PEdir=2 --gdcoeffs=NONE \
        --extra-eddy-arg=--data_is_shelled --extra-eddy-arg=--repol --extra-eddy-arg=--verbose"
     else
         echo Unknown number of --posData, --negData.
         echo Execute $HCPPIPEDIR/DiffusionPreprocessing/DiffPreprocPipeline.sh manually.
         exit 1
     fi

    echo $cmd
    echo ''
    $cmd || exit 1

fi


# create symlinks
template=($raw_template)
/software/rocky9/luigi-pnlpipe/workflows/ExecuteTask.py \
--bids-data-dir $bids_data_dir \
--dwi-template ${template[0]} \
--task $task -c $id -s $s

